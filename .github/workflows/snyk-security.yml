name: Snyk Security Scan MVP

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      # 1. Checkout repository
      - uses: actions/checkout@v4

      # 2. Install frontend dependencies
      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      # 3. Snyk Open Source scan frontend
      - name: Snyk frontend OSS scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_KEY }}
        with:
          args: --file=frontend/package.json --sarif-file-output=snyk-frontend-oss.sarif

      # 4. Snyk Code (SAST) scan frontend
      - name: Snyk frontend SAST scan
        run: snyk code test ./frontend --sarif-file-output=snyk-frontend-code.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_KEY }}

      # 5. Upload frontend SARIF files
      - name: Upload frontend OSS SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: hashFiles('snyk-frontend-oss.sarif') != ''
        with:
          sarif_file: snyk-frontend-oss.sarif
          category: snyk-frontend-oss

      - name: Upload frontend Code SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: hashFiles('snyk-frontend-code.sarif') != ''
        with:
          sarif_file: snyk-frontend-code.sarif
          category: snyk-frontend-code

      # 6. Install backend dependencies
      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend

      # 7. Snyk Open Source scan backend
      - name: Snyk backend OSS scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_KEY }}
        with:
          args: --file=backend/package.json --sarif-file-output=snyk-backend-oss.sarif

      # 8. Snyk Code (SAST) scan backend
      - name: Snyk backend SAST scan
        run: snyk code test ./backend --sarif-file-output=snyk-backend-code.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_KEY }}

      # 9. Upload backend SARIF files
      - name: Upload backend OSS SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: hashFiles('snyk-backend-oss.sarif') != ''
        with:
          sarif_file: snyk-backend-oss.sarif
          category: snyk-backend-oss

      - name: Upload backend Code SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: hashFiles('snyk-backend-code.sarif') != ''
        with:
          sarif_file: snyk-backend-code.sarif
          category: snyk-backend-code

      # 10. Optional IaC scan (Docker + Kubernetes)
      - name: Snyk IaC scan
        run: snyk iac test ./iac --sarif-file-output=snyk-iac.sarif || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_KEY }}

      - name: Upload IaC SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: hashFiles('snyk-iac.sarif') != ''
        with:
          sarif_file: snyk-iac.sarif
          category: snyk-iac
